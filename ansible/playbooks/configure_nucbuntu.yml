---
# Inventory file is in /etc/ansible/hosts
# run command ansible-playbook configure_nucbuntu.yml -u 'redacted' -K
- name: Install all dependencies
  hosts: nucbuntu
  vars:
    username: kevin
  tasks:

    - name: Install apt Dependencies
      become: true
      apt:
        pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - git
        - bash-completion
        - gnupg
        - software-properties-common
        - awscli

      # Install kubectl
    - name: Add Kubectl Repo Key
      become: true
      apt_key:
        keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add kubectl Apt Repo
      become: true
      apt_repository:
        repo: 'deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main'
        filename: kubernetes
    - name: Install kubectl
      become: true
      apt:
        name: kubectl
    - name: Enable kubectl bash autocompletion
      lineinfile:
        path: ~/.bashrc
        line: 'source <(kubectl completion bash)'
        # Install terraform
    - name: Add terraform Repo Key
      become: true
      apt_key:
        keyring: /usr/share/keyrings/terraform.gpg
        url: https://apt.releases.hashicorp.com/gpg
    - name: Add terraform Apt Repo
      become: true
      apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com focal main"
        filename: terraform
    - name: Install terraform
      become: true
      apt:
        name: terraform
# install terragrunt
    - name: Check if terragrunt is installed
      command: which terragrunt
      register: terragrunt
      ignore_errors: true
    - name: Download terragrunt
      become: true
      get_url:
        url: https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.6/terragrunt_linux_amd64
        dest: /usr/local/bin/terragrunt
        mode: '0740'
        owner: "{{ username }}"
      when: terragrunt.rc != 0




  # Install helm
    - name: Add Helm Apt Repo
      become: true
      apt_repository:
        repo: 'deb https://baltocdn.com/helm/stable/debian/ all main'
        filename: helm-stable-debian
    - name: Add Helm Repo Key - needed for helm installation
      become: true
      apt_key:
        url: https://baltocdn.com/helm/signing.asc
    - name: Install Helm Dependencies
      become: true
      apt:
        name: apt-transport-https
    - name: Install Helm
      become: true
      apt:
        name: helm

    # Install k8s tools
    - name: Clone kubens/kubectx git
      git:
       repo: https://github.com/ahmetb/kubectx.git
       dest: ~/git/kubectx
       clone: yes
       update: yes
    - name: Create symlinks for kubens and kubectx
      file:
        src: "/home/kevin/git/kubectx/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        state: link
      with_items:
        - kubectx
        - kubens
    - name: Check if k9s is installed
      command: which k9s
      register: k9s
      ignore_errors: true
    - name: Download k9s
      become: true
      get_url:
        url: https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_x86_64.tar.gz
        dest: /tmp/k9s.tgz
        mode: '0740'
        owner: "{{ username }}"
      when: k9s.rc !=0
    - name: Extract k9s to folder
      unarchive:
        src: /tmp/k9s.tgz
        dest: /usr/local/bin
        mode: '0740'
        owner: "{{ username }}"
        remote_src: True
      become: true
      when: k9s.rc !=0

    # Ensure folders are created for the kubernetes bindmounts for cert storage
    - name: Create folder for lets encrypt
      become: true
      file:
        path: "{{ item }}"
        state: directory
      with_items:
       - '/kube_host/letsencrypt'
       - '/kube_host/challenge'
       - '/kube_host/jenkins-volume'
    - name: Add prometheus repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url:  https://prometheus-community.github.io/helm-charts
    - name: Add Jenkins repo
      kubernetes.core.helm_repository:
        name: jenkinsci
        repo_url:  https://charts.jenkins.io